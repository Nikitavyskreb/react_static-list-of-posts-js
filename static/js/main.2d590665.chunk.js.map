{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","preparedPosts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAEED,EAFFC,KACAC,EACEF,EADFE,MAGF,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCVMI,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAL,EAEEI,EAFFJ,MACAD,EACEK,EADFL,KAGF,OACE,sBAAKE,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IAEtC,OAED,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,SCpBIC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQK,UCFrCC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAd,EAGEa,EAHFb,KACAO,EAEEM,EAFFN,KACAE,EACEI,EADFJ,SAGF,OACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,8BACG,cAED,cAAC,EAAD,CAAUd,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGI,IAGFE,EAASM,OAEN,cAAC,EAAD,CAAaN,SAAUA,IAGvB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCCnCCO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCetC,IAAMO,EAAgBC,EAAgBT,KAAI,SAAAO,GAAK,kCAC1CA,GAD0C,IAE7CjB,MAdoBoB,EAcDH,EAAMG,OAblBC,EAAgBC,MAAK,SAAAtB,GAAI,OAC9BA,EAAKW,KAAOS,MACR,MAYNX,UAT+Bc,EASGN,EAAMN,GARjCa,EAAmBC,QAAO,SAAAnB,GAAO,OACtCA,EAAQiB,SAAWA,QAFvB,IAAiCA,EANXH,KAkBTM,EAAM,kBACjB,0BAASvB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOC,QC1BrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d590665.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const {\n    body,\n    email,\n    name,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length\n        ? (\n          <CommentList comments={comments} />\n        )\n        : (\n          <>\n            <hr />\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction findUserById(userId) {\n  return usersFromServer.find(user => (\n    user.id === userId\n  )) || null;\n}\n\nfunction getCommentsByCategoryId(postId) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === postId\n  ));\n}\n\nconst preparedPosts = postsFromServer.map(posts => ({\n  ...posts,\n  user: findUserById(posts.userId),\n  comments: getCommentsByCategoryId(posts.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={preparedPosts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}